env:
  region:             "us-central1"
  app_name:           "ots"
  app_version:        ${GITHUB_SHA}
  app_port:           "3000"
  project_id:         "${{ secrets.PROJECT_ID }}"
  repository:         "us-central1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/team4/ots"
  cluster_name:       "project-cluster"
  helm_repository:    "https://github.com/Aselya2507/team4-project.git"
  google_domain_name: "aselya25789.com"
  environment:        "dev"
  
name: ContinuousDeployment
on:
  workflow_run:
    workflows: ["CDelivery"]
    types:
      - completed
# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]
  workflow_dispatch:
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Authenticate to GCP

      # - id: 'auth'
      #   name: 'Authenticate to Google Cloud'
      #   uses: 'google-github-actions/auth@v0'
      #   with:
      #     credentials_json: '${{ secrets.SERVICE_ACCOUNT }}'

      # - name: Check Out Helm Repo
      #   run: |
      #     git clone "${{ env.helm_repository }}"
        

      # # Get k8s credentials
      # - name: Get k8s credentials
      #   run: |
      #     gcloud container clusters get-credentials "${{ env.cluster_name }}" --region  "${{ env.region }}"
      #     kubectl get nodes

      
      # - name: Configure Backend
      #   working-directory: "custom_helm_chart"
      #   run: |
      #     bash setenv.sh

      # - name: Initialize
      #   working-directory: "custom_helm_chart"
      #   run: |
      #     terraform init 


      # - name: Create workspace
      #   working-directory: "custom_helm_chart"
      #   run: |
      #     terraform workspace  select  dev   ||  terraform workspace  new  dev


      # # Runs a set of commands using the runners shell
      # - name: Deploy Application
      #   working-directory: "custom_helm_chart"
      #   run: |
      #     terraform apply   \
      #     -var repository="${{ env.repository }}"     \
      #     -var app_version="${{ env.app_version }}"   \
      #     -var app_port="${{ env.app_port }}"          \
      #     -var google_domain_name="${{ env.google_domain_name }}"          \
      #     -var app_name="${{ env.app_name }}"   \
      #     -var region="${{ env.region }}" \
      #     -var project_id="${{ secrets.PROJECT_ID }}" \
      #     -var environment="${{ env.environment }}" \
      #     --auto-approve